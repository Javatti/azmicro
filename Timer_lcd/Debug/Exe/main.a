;
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;char text[20];
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E     if (PIND.2 == 0){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000F      OCR0 ++;  //in dastor register end Timer ra balatar mibarad
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0010      while (PIND.2 == 0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0011     }
; 0000 0012 
; 0000 0013 }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0017 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0018     if (PIND.3 == 0 && OCR0 > 1){
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0019      OCR0 --;  //in dastor register end Timer ra kamtar mikonad
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001A      while (PIND.3 == 0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001B     }
; 0000 001C 
; 0000 001D }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;// Timer 0 output compare interrupt service routine
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0021 {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0022 
; 0000 0023 /* in function dar vaghe
; 0000 0024  baad az har bar tamom shodan meghdar counter
; 0000 0025  yek interupt faal mikonad
; 0000 0026  ke dar inja fellan ma azash estefade nemikonim*/
; 0000 0027 
; 0000 0028 }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;
;void main(void)
; 0000 002B {
;PCODE: $0000003D VOL: 0
; 0000 002C // Declare your local variables here
; 0000 002D 
; 0000 002E // Input/Output Ports initialization
; 0000 002F // Port A initialization
; 0000 0030 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0031 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0032 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0033 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0034 
; 0000 0035 // Port B initialization
; 0000 0036 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0037 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0038 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=P
; 0000 0039 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (1<<PORTB0);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 003A 
; 0000 003B // Port C initialization
; 0000 003C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 003E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0040 
; 0000 0041 // Port D initialization
; 0000 0042 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0043 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0044 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=P Bit2=P Bit1=T Bit0=T
; 0000 0045 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0046 
; 0000 0047 // Timer/Counter 0 initialization
; 0000 0048 // Clock source: T0 pin Falling Edge
; 0000 0049 // Mode: CTC top=OCR0
; 0000 004A // OC0 output: Toggle on compare match
; 0000 004B TCCR0=(0<<WGM00) | (0<<COM01) | (1<<COM00) | (1<<WGM01) | (1<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 004C TCNT0=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 004D OCR0=0x02;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 004E 
; 0000 004F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0050 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (0<<TOIE0);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0051 
; 0000 0052 // External Interrupt(s) initialization
; 0000 0053 // INT0: On
; 0000 0054 // INT0 Mode: Falling Edge
; 0000 0055 // INT1: On
; 0000 0056 // INT1 Mode: Falling Edge
; 0000 0057 // INT2: Off
; 0000 0058 GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0059 MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005A MCUCSR=(0<<ISC2);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 005B GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 005C 
; 0000 005D // Alphanumeric LCD initialization
; 0000 005E // Connections are specified in the
; 0000 005F // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0060 // RS - PORTA Bit 0
; 0000 0061 // RD - PORTA Bit 1
; 0000 0062 // EN - PORTA Bit 2
; 0000 0063 // D4 - PORTA Bit 4
; 0000 0064 // D5 - PORTA Bit 5
; 0000 0065 // D6 - PORTA Bit 6
; 0000 0066 // D7 - PORTA Bit 7
; 0000 0067 // Characters/line: 16
; 0000 0068 lcd_init(16);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0069 
; 0000 006A // Global enable interrupts
; 0000 006B #asm("sei")
;PCODE: $00000061 VOL: 0
	sei
;PCODE: $00000062 VOL: 0
; 0000 006C 
; 0000 006D while (1)
;PCODE: $00000063 VOL: 0
; 0000 006E       {
; 0000 006F       /* shart mizarim ke meghdar register
; 0000 0070        az 1 kamter bod biad register ro 1 konad*/
; 0000 0071       if (OCR0 < 1 ) OCR0 = 1;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0072       /*hala agar meghdar register payani timer
; 0000 0073        az meghdar register shoroee timer yaani "TCNT0"
; 0000 0074        kamtar bod meghdar TCNT0 ra dar OCR0 beriz  */
; 0000 0075        if (OCR0 < TCNT0 ) TCNT0 = OCR0;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0076        /*dastor sprintf mikhahim dakhel reshte ke darim
; 0000 0077        meghdar TCNT0 berizim ta chap beshe*/
; 0000 0078        sprintf(text,"stert:%d",TCNT0);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0079        //dastor mokhtasat lcd
; 0000 007A        lcd_gotoxy(0,0);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 007B        //chap araye text
; 0000 007C        lcd_puts(text);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 007D        //dastor mokhtasat khad baadi
; 0000 007E        lcd_gotoxy(1,1);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 007F        //dastor sprintf meghdar register end
; 0000 0080        sprintf(text,"end:%d",OCR0);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0081        //chap araye text
; 0000 0082        lcd_puts(text);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0083        //pak kardan lcd bad az 100 ms
; 0000 0084        delay_ms(100);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0085        lcd_clear();
;PCODE: $00000099 VOL: 0
; 0000 0086 
; 0000 0087 
; 0000 0088       }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0089 }
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
